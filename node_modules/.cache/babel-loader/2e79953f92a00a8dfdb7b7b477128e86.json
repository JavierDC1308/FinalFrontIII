{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PowerM2\\\\Desktop\\\\Digital House\\\\Examen\\\\14. Front End III\\\\FinalFrontIII\\\\src\\\\Routes\\\\Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useOdontoStates } from \"../Context/Context\";\nimport Card from \"../Components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const {\n    favs,\n    setFavs\n  } = useOdontoStates(); // Función para agregar un odontólogo a la lista de favoritos si no está en ella\n\n  const addToFavs = odontologo => {\n    // Verifica si el odontólogo ya está en la lista de favoritos\n    if (!favs.some(fav => fav.id === odontologo.id)) {\n      // Si no está en la lista, agrégalo\n      setFavs([...favs, odontologo]);\n    }\n  }; // Función para eliminar un odontólogo de la lista de favoritos\n\n\n  const removeFromFavs = odontologoToRemove => {\n    // Filtra la lista de favoritos para excluir el odontólogo que se quiere eliminar\n    const updatedFavs = favs.filter(fav => fav.id !== odontologoToRemove.id); // Actualiza el estado de la lista de favoritos\n\n    setFavs(updatedFavs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentistas Destacados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favs.map(fav => /*#__PURE__*/_jsxDEV(Card, {\n        odontologo: fav,\n        addToFavs: addToFavs,\n        removeFromFavs: removeFromFavs // Pasa la función removeFromFavs como prop al componente Card\n\n      }, fav.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Favs, \"mH4OSf5mKKyMwphybb2DwSOM0SA=\", false, function () {\n  return [useOdontoStates];\n});\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useOdontoStates","Card","Favs","favs","setFavs","addToFavs","odontologo","some","fav","id","removeFromFavs","odontologoToRemove","updatedFavs","filter","map"],"sources":["C:/Users/PowerM2/Desktop/Digital House/Examen/14. Front End III/FinalFrontIII/src/Routes/Favs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useOdontoStates } from \"../Context/Context\";\r\nimport Card from \"../Components/Card\";\r\n\r\nconst Favs = () => {\r\n  const { favs, setFavs } = useOdontoStates();\r\n\r\n  // Función para agregar un odontólogo a la lista de favoritos si no está en ella\r\n  const addToFavs = (odontologo) => {\r\n    // Verifica si el odontólogo ya está en la lista de favoritos\r\n    if (!favs.some((fav) => fav.id === odontologo.id)) {\r\n      // Si no está en la lista, agrégalo\r\n      setFavs([...favs, odontologo]);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar un odontólogo de la lista de favoritos\r\n  const removeFromFavs = (odontologoToRemove) => {\r\n    // Filtra la lista de favoritos para excluir el odontólogo que se quiere eliminar\r\n    const updatedFavs = favs.filter((fav) => fav.id !== odontologoToRemove.id);\r\n    // Actualiza el estado de la lista de favoritos\r\n    setFavs(updatedFavs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Dentistas Destacados</h1>\r\n      <div className=\"card-grid\">\r\n        {favs.map((fav) => (\r\n          <Card\r\n            odontologo={fav}\r\n            key={fav.id}\r\n            addToFavs={addToFavs}\r\n            removeFromFavs={removeFromFavs} // Pasa la función removeFromFavs como prop al componente Card\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favs;\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBJ,eAAe,EAAzC,CADiB,CAGjB;;EACA,MAAMK,SAAS,GAAIC,UAAD,IAAgB;IAChC;IACA,IAAI,CAACH,IAAI,CAACI,IAAL,CAAWC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWH,UAAU,CAACG,EAAzC,CAAL,EAAmD;MACjD;MACAL,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,UAAV,CAAD,CAAP;IACD;EACF,CAND,CAJiB,CAYjB;;;EACA,MAAMI,cAAc,GAAIC,kBAAD,IAAwB;IAC7C;IACA,MAAMC,WAAW,GAAGT,IAAI,CAACU,MAAL,CAAaL,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWE,kBAAkB,CAACF,EAAnD,CAApB,CAF6C,CAG7C;;IACAL,OAAO,CAACQ,WAAD,CAAP;EACD,CALD;;EAOA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGT,IAAI,CAACW,GAAL,CAAUN,GAAD,iBACR,QAAC,IAAD;QACE,UAAU,EAAEA,GADd;QAGE,SAAS,EAAEH,SAHb;QAIE,cAAc,EAAEK,cAJlB,CAIkC;;MAJlC,GAEOF,GAAG,CAACC,EAFX;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAeD,CAnCD;;GAAMP,I;UACsBF,e;;;KADtBE,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}